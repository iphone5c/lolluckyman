<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/22 18:41:35 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.playrecord.dao.IPlayRecordDao">

    <resultMap type="com.lolluckyman.business.playrecord.entity.PlayRecord" id="resultMap">
        <id property="code" column="code" />
        <result property="foreignKey" column="foreignkey" />
        <result property="play" column="play" />
        <result property="content" column="content" />
        <result property="success" column="success" />
        <result property="resultDesc" column="resultdesc" />
        <result property="playRecordStatus" column="playrecordstatus" />
        <result property="createTime" column="createtime" />
    </resultMap>

    <sql id="baseCol">
        code, foreignkey, play, content, success, resultdesc, playrecordstatus, createtime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="code != null"><![CDATA[ and code like #{code} ]]></if>
            <if test="code_enum != null">
                <![CDATA[ and code in ]]>
                <foreach collection="code_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="foreignKey != null"><![CDATA[ and foreignkey like #{foreignKey} ]]></if>
            <if test="foreignKey_enum != null">
                <![CDATA[ and foreignkey in ]]>
                <foreach collection="foreignKey_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="play != null"><![CDATA[ and play like #{play} ]]></if>
            <if test="play_enum != null">
                <![CDATA[ and play in ]]>
                <foreach collection="play_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="content != null"><![CDATA[ and content like #{content} ]]></if>
            <if test="content_enum != null">
                <![CDATA[ and content in ]]>
                <foreach collection="content_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="success != null"><![CDATA[ and success like #{success} ]]></if>
            <if test="success_enum != null">
                <![CDATA[ and success in ]]>
                <foreach collection="success_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="resultDesc != null"><![CDATA[ and resultdesc like #{resultDesc} ]]></if>
            <if test="resultDesc_enum != null">
                <![CDATA[ and resultdesc in ]]>
                <foreach collection="resultDesc_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="playRecordStatus != null"><![CDATA[ and playrecordstatus like #{playRecordStatus} ]]></if>
            <if test="playRecordStatus_enum != null">
                <![CDATA[ and playrecordstatus in ]]>
                <foreach collection="playRecordStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'code'"><![CDATA[ code like #{item.value} ]]></if>
                    <if test="item.name == 'foreignKey'"><![CDATA[ foreignkey like #{item.value} ]]></if>
                    <if test="item.name == 'play'"><![CDATA[ play like #{item.value} ]]></if>
                    <if test="item.name == 'content'"><![CDATA[ content like #{item.value} ]]></if>
                    <if test="item.name == 'success'"><![CDATA[ success like #{item.value} ]]></if>
                    <if test="item.name == 'resultDesc'"><![CDATA[ resultdesc like #{item.value} ]]></if>
                    <if test="item.name == 'playRecordStatus'"><![CDATA[ playrecordstatus like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'code_desc'"><![CDATA[ code desc, ]]></if>
            <if test="_orderBy == 'code_asc'"><![CDATA[ code, ]]></if>
            <if test="_orderBy == 'foreignKey_desc'"><![CDATA[ foreignkey desc, ]]></if>
            <if test="_orderBy == 'foreignKey_asc'"><![CDATA[ foreignkey, ]]></if>
            <if test="_orderBy == 'play_desc'"><![CDATA[ play desc, ]]></if>
            <if test="_orderBy == 'play_asc'"><![CDATA[ play, ]]></if>
            <if test="_orderBy == 'content_desc'"><![CDATA[ content desc, ]]></if>
            <if test="_orderBy == 'content_asc'"><![CDATA[ content, ]]></if>
            <if test="_orderBy == 'success_desc'"><![CDATA[ success desc, ]]></if>
            <if test="_orderBy == 'success_asc'"><![CDATA[ success, ]]></if>
            <if test="_orderBy == 'resultDesc_desc'"><![CDATA[ resultdesc desc, ]]></if>
            <if test="_orderBy == 'resultDesc_asc'"><![CDATA[ resultdesc, ]]></if>
            <if test="_orderBy == 'playRecordStatus_desc'"><![CDATA[ playrecordstatus desc, ]]></if>
            <if test="_orderBy == 'playRecordStatus_asc'"><![CDATA[ playrecordstatus, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.playrecord.entity.PlayRecord">
        insert into
        lol_playrecord(code,foreignkey,play,content,success,resultdesc,playrecordstatus,createtime)
        values(#{code},#{foreignKey},#{play},#{content},#{success},#{resultDesc},#{playRecordStatus},#{createTime});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.playrecord.entity.PlayRecord">
        update lol_playrecord
        set foreignkey=#{foreignKey},play=#{play},content=#{content},success=#{success},resultdesc=#{resultDesc},playrecordstatus=#{playRecordStatus},createtime=#{createTime}
        where code=#{code};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_playrecord where code=#{code};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_playrecord
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_playrecord where code=#{code};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_playrecord where code=#{code};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_playrecord
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_playrecord
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_playrecord
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


