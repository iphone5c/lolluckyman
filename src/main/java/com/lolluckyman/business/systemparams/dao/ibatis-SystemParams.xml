<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/11 16:06:38 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.systemparams.dao.ISystemParamsDao">

    <resultMap type="com.lolluckyman.business.systemparams.entity.SystemParams" id="resultMap">
        <id property="systemParamsCode" column="systemparamscode" />
        <result property="systemParamsKey" column="systemparamskey" />
        <result property="systemParamsValue" column="systemparamsvalue" />
        <result property="description" column="description" />
        <result property="createTime" column="createtime" />
    </resultMap>

    <sql id="baseCol">
        systemparamscode, systemparamskey, systemparamsvalue, description, createtime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="systemParamsCode != null"><![CDATA[ and systemparamscode like #{systemParamsCode} ]]></if>
            <if test="systemParamsCode_enum != null">
                <![CDATA[ and systemparamscode in ]]>
                <foreach collection="systemParamsCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="systemParamsKey != null"><![CDATA[ and systemparamskey like #{systemParamsKey} ]]></if>
            <if test="systemParamsKey_enum != null">
                <![CDATA[ and systemparamskey in ]]>
                <foreach collection="systemParamsKey_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="systemParamsValue != null"><![CDATA[ and systemparamsvalue like #{systemParamsValue} ]]></if>
            <if test="systemParamsValue_enum != null">
                <![CDATA[ and systemparamsvalue in ]]>
                <foreach collection="systemParamsValue_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="description != null"><![CDATA[ and description like #{description} ]]></if>
            <if test="description_enum != null">
                <![CDATA[ and description in ]]>
                <foreach collection="description_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'systemParamsCode'"><![CDATA[ systemparamscode like #{item.value} ]]></if>
                    <if test="item.name == 'systemParamsKey'"><![CDATA[ systemparamskey like #{item.value} ]]></if>
                    <if test="item.name == 'systemParamsValue'"><![CDATA[ systemparamsvalue like #{item.value} ]]></if>
                    <if test="item.name == 'description'"><![CDATA[ description like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'systemParamsCode_desc'"><![CDATA[ systemparamscode desc, ]]></if>
            <if test="_orderBy == 'systemParamsCode_asc'"><![CDATA[ systemparamscode, ]]></if>
            <if test="_orderBy == 'systemParamsKey_desc'"><![CDATA[ systemparamskey desc, ]]></if>
            <if test="_orderBy == 'systemParamsKey_asc'"><![CDATA[ systemparamskey, ]]></if>
            <if test="_orderBy == 'systemParamsValue_desc'"><![CDATA[ systemparamsvalue desc, ]]></if>
            <if test="_orderBy == 'systemParamsValue_asc'"><![CDATA[ systemparamsvalue, ]]></if>
            <if test="_orderBy == 'description_desc'"><![CDATA[ description desc, ]]></if>
            <if test="_orderBy == 'description_asc'"><![CDATA[ description, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.systemparams.entity.SystemParams">
        insert into
        lol_systemparams(systemparamscode,systemparamskey,systemparamsvalue,description,createtime)
        values(#{systemParamsCode},#{systemParamsKey},#{systemParamsValue},#{description},#{createTime});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.systemparams.entity.SystemParams">
        update lol_systemparams
        set systemparamskey=#{systemParamsKey},systemparamsvalue=#{systemParamsValue},description=#{description},createtime=#{createTime}
        where systemparamscode=#{systemParamsCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_systemparams where systemparamscode=#{systemParamsCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_systemparams
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_systemparams where systemparamscode=#{systemParamsCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_systemparams where systemparamscode=#{systemParamsCode};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_systemparams
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_systemparams
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_systemparams
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


