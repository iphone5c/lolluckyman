<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/24 22:29:55 魏源 created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.account.dao.IAccountDao">

    <resultMap type="com.lolluckyman.business.account.entity.Account" id="resultMap">
        <id property="code" column="code" />
        <result property="loginAccount" column="loginaccount" />
        <result property="password" column="password" />
        <result property="realName" column="realname" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="qq" column="qq" />
        <result property="passwordProblem" column="passwordproblem" />
        <result property="passwordAnswer" column="passwordanswer" />
        <result property="withdrawalsPassword" column="withdrawalspassword" />
        <result property="accountStatus" column="accountstatus" />
        <result property="description" column="description" />
        <result property="createTime" column="createtime" />
        <result property="withdrawalsStatus" column="withdrawalsstatus" />
        <result property="rechargeStatus" column="rechargestatus" />
        <result property="exchangePrizeStatus" column="exchangeprizestatus" />
        <result property="bettingStatus" column="bettingstatus" />
    </resultMap>

    <sql id="baseCol">
        code, loginaccount, password, realname, phone, email, qq, passwordproblem, passwordanswer, withdrawalspassword, accountstatus, description, createtime, withdrawalsstatus, rechargestatus, exchangeprizestatus, bettingstatus
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="code != null"><![CDATA[ and code like #{code} ]]></if>
            <if test="code_enum != null">
                <![CDATA[ and code in ]]>
                <foreach collection="code_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="loginAccount != null"><![CDATA[ and loginaccount like #{loginAccount} ]]></if>
            <if test="loginAccount_enum != null">
                <![CDATA[ and loginaccount in ]]>
                <foreach collection="loginAccount_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="password != null"><![CDATA[ and password like #{password} ]]></if>
            <if test="password_enum != null">
                <![CDATA[ and password in ]]>
                <foreach collection="password_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="realName != null"><![CDATA[ and realname like #{realName} ]]></if>
            <if test="realName_enum != null">
                <![CDATA[ and realname in ]]>
                <foreach collection="realName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="phone != null"><![CDATA[ and phone like #{phone} ]]></if>
            <if test="phone_enum != null">
                <![CDATA[ and phone in ]]>
                <foreach collection="phone_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="email != null"><![CDATA[ and email like #{email} ]]></if>
            <if test="email_enum != null">
                <![CDATA[ and email in ]]>
                <foreach collection="email_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="qq != null"><![CDATA[ and qq like #{qq} ]]></if>
            <if test="qq_enum != null">
                <![CDATA[ and qq in ]]>
                <foreach collection="qq_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="passwordProblem != null"><![CDATA[ and passwordproblem like #{passwordProblem} ]]></if>
            <if test="passwordProblem_enum != null">
                <![CDATA[ and passwordproblem in ]]>
                <foreach collection="passwordProblem_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="passwordAnswer != null"><![CDATA[ and passwordanswer like #{passwordAnswer} ]]></if>
            <if test="passwordAnswer_enum != null">
                <![CDATA[ and passwordanswer in ]]>
                <foreach collection="passwordAnswer_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="withdrawalsPassword != null"><![CDATA[ and withdrawalspassword like #{withdrawalsPassword} ]]></if>
            <if test="withdrawalsPassword_enum != null">
                <![CDATA[ and withdrawalspassword in ]]>
                <foreach collection="withdrawalsPassword_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountStatus != null"><![CDATA[ and accountstatus like #{accountStatus} ]]></if>
            <if test="accountStatus_enum != null">
                <![CDATA[ and accountstatus in ]]>
                <foreach collection="accountStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="description != null"><![CDATA[ and description like #{description} ]]></if>
            <if test="description_enum != null">
                <![CDATA[ and description in ]]>
                <foreach collection="description_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="withdrawalsStatus != null"><![CDATA[ and withdrawalsstatus like #{withdrawalsStatus} ]]></if>
            <if test="withdrawalsStatus_enum != null">
                <![CDATA[ and withdrawalsstatus in ]]>
                <foreach collection="withdrawalsStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="rechargeStatus != null"><![CDATA[ and rechargestatus like #{rechargeStatus} ]]></if>
            <if test="rechargeStatus_enum != null">
                <![CDATA[ and rechargestatus in ]]>
                <foreach collection="rechargeStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="exchangePrizeStatus != null"><![CDATA[ and exchangeprizestatus like #{exchangePrizeStatus} ]]></if>
            <if test="exchangePrizeStatus_enum != null">
                <![CDATA[ and exchangeprizestatus in ]]>
                <foreach collection="exchangePrizeStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bettingStatus != null"><![CDATA[ and bettingstatus like #{bettingStatus} ]]></if>
            <if test="bettingStatus_enum != null">
                <![CDATA[ and bettingstatus in ]]>
                <foreach collection="bettingStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'code'"><![CDATA[ code like #{item.value} ]]></if>
                    <if test="item.name == 'loginAccount'"><![CDATA[ loginaccount like #{item.value} ]]></if>
                    <if test="item.name == 'password'"><![CDATA[ password like #{item.value} ]]></if>
                    <if test="item.name == 'realName'"><![CDATA[ realname like #{item.value} ]]></if>
                    <if test="item.name == 'phone'"><![CDATA[ phone like #{item.value} ]]></if>
                    <if test="item.name == 'email'"><![CDATA[ email like #{item.value} ]]></if>
                    <if test="item.name == 'qq'"><![CDATA[ qq like #{item.value} ]]></if>
                    <if test="item.name == 'passwordProblem'"><![CDATA[ passwordproblem like #{item.value} ]]></if>
                    <if test="item.name == 'passwordAnswer'"><![CDATA[ passwordanswer like #{item.value} ]]></if>
                    <if test="item.name == 'withdrawalsPassword'"><![CDATA[ withdrawalspassword like #{item.value} ]]></if>
                    <if test="item.name == 'accountStatus'"><![CDATA[ accountstatus like #{item.value} ]]></if>
                    <if test="item.name == 'description'"><![CDATA[ description like #{item.value} ]]></if>
                    <if test="item.name == 'withdrawalsStatus'"><![CDATA[ withdrawalsstatus like #{item.value} ]]></if>
                    <if test="item.name == 'rechargeStatus'"><![CDATA[ rechargestatus like #{item.value} ]]></if>
                    <if test="item.name == 'exchangePrizeStatus'"><![CDATA[ exchangeprizestatus like #{item.value} ]]></if>
                    <if test="item.name == 'bettingStatus'"><![CDATA[ bettingstatus like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'code_desc'"><![CDATA[ code desc, ]]></if>
            <if test="_orderBy == 'code_asc'"><![CDATA[ code, ]]></if>
            <if test="_orderBy == 'loginAccount_desc'"><![CDATA[ loginaccount desc, ]]></if>
            <if test="_orderBy == 'loginAccount_asc'"><![CDATA[ loginaccount, ]]></if>
            <if test="_orderBy == 'password_desc'"><![CDATA[ password desc, ]]></if>
            <if test="_orderBy == 'password_asc'"><![CDATA[ password, ]]></if>
            <if test="_orderBy == 'realName_desc'"><![CDATA[ realname desc, ]]></if>
            <if test="_orderBy == 'realName_asc'"><![CDATA[ realname, ]]></if>
            <if test="_orderBy == 'phone_desc'"><![CDATA[ phone desc, ]]></if>
            <if test="_orderBy == 'phone_asc'"><![CDATA[ phone, ]]></if>
            <if test="_orderBy == 'email_desc'"><![CDATA[ email desc, ]]></if>
            <if test="_orderBy == 'email_asc'"><![CDATA[ email, ]]></if>
            <if test="_orderBy == 'qq_desc'"><![CDATA[ qq desc, ]]></if>
            <if test="_orderBy == 'qq_asc'"><![CDATA[ qq, ]]></if>
            <if test="_orderBy == 'passwordProblem_desc'"><![CDATA[ passwordproblem desc, ]]></if>
            <if test="_orderBy == 'passwordProblem_asc'"><![CDATA[ passwordproblem, ]]></if>
            <if test="_orderBy == 'passwordAnswer_desc'"><![CDATA[ passwordanswer desc, ]]></if>
            <if test="_orderBy == 'passwordAnswer_asc'"><![CDATA[ passwordanswer, ]]></if>
            <if test="_orderBy == 'withdrawalsPassword_desc'"><![CDATA[ withdrawalspassword desc, ]]></if>
            <if test="_orderBy == 'withdrawalsPassword_asc'"><![CDATA[ withdrawalspassword, ]]></if>
            <if test="_orderBy == 'accountStatus_desc'"><![CDATA[ accountstatus desc, ]]></if>
            <if test="_orderBy == 'accountStatus_asc'"><![CDATA[ accountstatus, ]]></if>
            <if test="_orderBy == 'description_desc'"><![CDATA[ description desc, ]]></if>
            <if test="_orderBy == 'description_asc'"><![CDATA[ description, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'withdrawalsStatus_desc'"><![CDATA[ withdrawalsstatus desc, ]]></if>
            <if test="_orderBy == 'withdrawalsStatus_asc'"><![CDATA[ withdrawalsstatus, ]]></if>
            <if test="_orderBy == 'rechargeStatus_desc'"><![CDATA[ rechargestatus desc, ]]></if>
            <if test="_orderBy == 'rechargeStatus_asc'"><![CDATA[ rechargestatus, ]]></if>
            <if test="_orderBy == 'exchangePrizeStatus_desc'"><![CDATA[ exchangeprizestatus desc, ]]></if>
            <if test="_orderBy == 'exchangePrizeStatus_asc'"><![CDATA[ exchangeprizestatus, ]]></if>
            <if test="_orderBy == 'bettingStatus_desc'"><![CDATA[ bettingstatus desc, ]]></if>
            <if test="_orderBy == 'bettingStatus_asc'"><![CDATA[ bettingstatus, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.account.entity.Account">
        insert into
        lol_account(code,loginaccount,password,realname,phone,email,qq,passwordproblem,passwordanswer,withdrawalspassword,accountstatus,description,createtime,withdrawalsstatus,rechargestatus,exchangeprizestatus,bettingstatus)
        values(#{code},#{loginAccount},#{password},#{realName},#{phone},#{email},#{qq},#{passwordProblem},#{passwordAnswer},#{withdrawalsPassword},#{accountStatus},#{description},#{createTime},#{withdrawalsStatus},#{rechargeStatus},#{exchangePrizeStatus},#{bettingStatus});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.account.entity.Account">
        update lol_account
        set loginaccount=#{loginAccount},password=#{password},realname=#{realName},phone=#{phone},email=#{email},qq=#{qq},passwordproblem=#{passwordProblem},passwordanswer=#{passwordAnswer},withdrawalspassword=#{withdrawalsPassword},accountstatus=#{accountStatus},description=#{description},createtime=#{createTime},withdrawalsstatus=#{withdrawalsStatus},rechargestatus=#{rechargeStatus},exchangeprizestatus=#{exchangePrizeStatus},bettingstatus=#{bettingStatus}
        where code=#{code};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_account where code=#{code};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_account
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_account where code=#{code};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_account where code=#{code};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_account
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from lol_account
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_account
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 