<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/23 16:25:27 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.exchangeprize.dao.IExchangePrizeDao">

    <resultMap type="com.lolluckyman.business.exchangeprize.entity.ExchangePrize" id="resultMap">
        <id property="code" column="code" />
        <result property="prizeCode" column="prizecode" />
        <result property="applyExchangePrizeNum" column="applyexchangeprizenum" />
        <result property="exchangePrizeNum" column="exchangeprizenum" />
        <result property="consumptionCurrency" column="consumptioncurrency" />
        <result property="applyExchangeTime" column="applyexchangetime" />
        <result property="exchangeStatus" column="exchangestatus" />
        <result property="disposalTime" column="disposaltime" />
        <result property="gameAccount" column="gameaccount" />
        <result property="accountCode" column="accountcode" />
    </resultMap>

    <sql id="baseCol">
        code, prizecode, applyexchangeprizenum, exchangeprizenum, consumptioncurrency, applyexchangetime, exchangestatus, disposaltime, gameaccount, accountcode
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="code != null"><![CDATA[ and code like #{code} ]]></if>
            <if test="code_enum != null">
                <![CDATA[ and code in ]]>
                <foreach collection="code_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="prizeCode != null"><![CDATA[ and prizecode like #{prizeCode} ]]></if>
            <if test="prizeCode_enum != null">
                <![CDATA[ and prizecode in ]]>
                <foreach collection="prizeCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyExchangePrizeNum != null"><![CDATA[ and applyexchangeprizenum = #{applyExchangePrizeNum} ]]></if>
            <if test="applyExchangePrizeNum_r_min != null"><![CDATA[ and applyexchangeprizenum >= #{applyExchangePrizeNum_r_min} and applyexchangeprizenum <= #{applyExchangePrizeNum_r_max} ]]></if>
            <if test="applyExchangePrizeNum_enum != null">
                <![CDATA[ and applyexchangeprizenum in ]]>
                <foreach collection="applyExchangePrizeNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="exchangePrizeNum != null"><![CDATA[ and exchangeprizenum = #{exchangePrizeNum} ]]></if>
            <if test="exchangePrizeNum_r_min != null"><![CDATA[ and exchangeprizenum >= #{exchangePrizeNum_r_min} and exchangeprizenum <= #{exchangePrizeNum_r_max} ]]></if>
            <if test="exchangePrizeNum_enum != null">
                <![CDATA[ and exchangeprizenum in ]]>
                <foreach collection="exchangePrizeNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="consumptionCurrency != null"><![CDATA[ and consumptioncurrency like #{consumptionCurrency} ]]></if>
            <if test="consumptionCurrency_enum != null">
                <![CDATA[ and consumptioncurrency in ]]>
                <foreach collection="consumptionCurrency_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyExchangeTime != null"><![CDATA[ and applyexchangetime = #{applyExchangeTime} ]]></if>
            <if test="applyExchangeTime_r_min != null"><![CDATA[ and applyexchangetime >= #{applyExchangeTime_r_min} and applyexchangetime < #{applyExchangeTime_r_max} ]]></if>
            <if test="exchangeStatus != null"><![CDATA[ and exchangestatus like #{exchangeStatus} ]]></if>
            <if test="exchangeStatus_enum != null">
                <![CDATA[ and exchangestatus in ]]>
                <foreach collection="exchangeStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="disposalTime != null"><![CDATA[ and disposaltime = #{disposalTime} ]]></if>
            <if test="disposalTime_r_min != null"><![CDATA[ and disposaltime >= #{disposalTime_r_min} and disposaltime < #{disposalTime_r_max} ]]></if>
            <if test="gameAccount != null"><![CDATA[ and gameaccount like #{gameAccount} ]]></if>
            <if test="gameAccount_enum != null">
                <![CDATA[ and gameaccount in ]]>
                <foreach collection="gameAccount_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'code'"><![CDATA[ code like #{item.value} ]]></if>
                    <if test="item.name == 'prizeCode'"><![CDATA[ prizecode like #{item.value} ]]></if>
                    <if test="item.name == 'consumptionCurrency'"><![CDATA[ consumptioncurrency like #{item.value} ]]></if>
                    <if test="item.name == 'exchangeStatus'"><![CDATA[ exchangestatus like #{item.value} ]]></if>
                    <if test="item.name == 'gameAccount'"><![CDATA[ gameaccount like #{item.value} ]]></if>
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'code_desc'"><![CDATA[ code desc, ]]></if>
            <if test="_orderBy == 'code_asc'"><![CDATA[ code, ]]></if>
            <if test="_orderBy == 'prizeCode_desc'"><![CDATA[ prizecode desc, ]]></if>
            <if test="_orderBy == 'prizeCode_asc'"><![CDATA[ prizecode, ]]></if>
            <if test="_orderBy == 'applyExchangePrizeNum_desc'"><![CDATA[ applyexchangeprizenum desc, ]]></if>
            <if test="_orderBy == 'applyExchangePrizeNum_asc'"><![CDATA[ applyexchangeprizenum, ]]></if>
            <if test="_orderBy == 'exchangePrizeNum_desc'"><![CDATA[ exchangeprizenum desc, ]]></if>
            <if test="_orderBy == 'exchangePrizeNum_asc'"><![CDATA[ exchangeprizenum, ]]></if>
            <if test="_orderBy == 'consumptionCurrency_desc'"><![CDATA[ consumptioncurrency desc, ]]></if>
            <if test="_orderBy == 'consumptionCurrency_asc'"><![CDATA[ consumptioncurrency, ]]></if>
            <if test="_orderBy == 'applyExchangeTime_desc'"><![CDATA[ applyexchangetime desc, ]]></if>
            <if test="_orderBy == 'applyExchangeTime_asc'"><![CDATA[ applyexchangetime, ]]></if>
            <if test="_orderBy == 'exchangeStatus_desc'"><![CDATA[ exchangestatus desc, ]]></if>
            <if test="_orderBy == 'exchangeStatus_asc'"><![CDATA[ exchangestatus, ]]></if>
            <if test="_orderBy == 'disposalTime_desc'"><![CDATA[ disposaltime desc, ]]></if>
            <if test="_orderBy == 'disposalTime_asc'"><![CDATA[ disposaltime, ]]></if>
            <if test="_orderBy == 'gameAccount_desc'"><![CDATA[ gameaccount desc, ]]></if>
            <if test="_orderBy == 'gameAccount_asc'"><![CDATA[ gameaccount, ]]></if>
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.exchangeprize.entity.ExchangePrize">
        insert into
        lol_exchangeprize(code,prizecode,applyexchangeprizenum,exchangeprizenum,consumptioncurrency,applyexchangetime,exchangestatus,disposaltime,gameaccount,accountcode)
        values(#{code},#{prizeCode},#{applyExchangePrizeNum},#{exchangePrizeNum},#{consumptionCurrency},#{applyExchangeTime},#{exchangeStatus},#{disposalTime},#{gameAccount},#{accountCode});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.exchangeprize.entity.ExchangePrize">
        update lol_exchangeprize
        set prizecode=#{prizeCode},applyexchangeprizenum=#{applyExchangePrizeNum},exchangeprizenum=#{exchangePrizeNum},consumptioncurrency=#{consumptionCurrency},applyexchangetime=#{applyExchangeTime},exchangestatus=#{exchangeStatus},disposaltime=#{disposalTime},gameaccount=#{gameAccount},accountcode=#{accountCode}
        where code=#{code};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_exchangeprize where code=#{code};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_exchangeprize
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_exchangeprize where code=#{code};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_exchangeprize where code=#{code};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_exchangeprize
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_exchangeprize
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_exchangeprize
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


