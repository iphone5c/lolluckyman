<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/23 16:26:58 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.bettingrecord.dao.IBettingRecordDao">

    <resultMap type="com.lolluckyman.business.bettingrecord.entity.BettingRecord" id="resultMap">
        <id property="code" column="code" />
        <result property="accountCode" column="accountcode" />
        <result property="playRecordCode" column="playrecordcode" />
        <result property="quizMoney" column="quizmoney" />
        <result property="bettingRecordTime" column="bettingrecordtime" />
        <result property="bettingRecordResult" column="bettingrecordresult" />
        <result property="bettingRecordStatus" column="bettingrecordstatus" />
        <result property="betting" column="betting" />
    </resultMap>

    <sql id="baseCol">
        code, accountcode, playrecordcode, quizmoney, bettingrecordtime, bettingrecordresult, bettingrecordstatus, betting
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="code != null"><![CDATA[ and code like #{code} ]]></if>
            <if test="code_enum != null">
                <![CDATA[ and code in ]]>
                <foreach collection="code_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="playRecordCode != null"><![CDATA[ and playrecordcode like #{playRecordCode} ]]></if>
            <if test="playRecordCode_enum != null">
                <![CDATA[ and playrecordcode in ]]>
                <foreach collection="playRecordCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="quizMoney != null"><![CDATA[ and quizmoney = #{quizMoney} ]]></if>
            <if test="quizMoney_r_min != null"><![CDATA[ and quizmoney >= #{quizMoney_r_min} and quizmoney <= #{quizMoney_r_max} ]]></if>
            <if test="quizMoney_enum != null">
                <![CDATA[ and quizmoney in ]]>
                <foreach collection="quizMoney_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bettingRecordTime != null"><![CDATA[ and bettingrecordtime = #{bettingRecordTime} ]]></if>
            <if test="bettingRecordTime_r_min != null"><![CDATA[ and bettingrecordtime >= #{bettingRecordTime_r_min} and bettingrecordtime < #{bettingRecordTime_r_max} ]]></if>
            <if test="bettingRecordResult != null"><![CDATA[ and bettingrecordresult like #{bettingRecordResult} ]]></if>
            <if test="bettingRecordResult_enum != null">
                <![CDATA[ and bettingrecordresult in ]]>
                <foreach collection="bettingRecordResult_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bettingRecordStatus != null"><![CDATA[ and bettingrecordstatus like #{bettingRecordStatus} ]]></if>
            <if test="bettingRecordStatus_enum != null">
                <![CDATA[ and bettingrecordstatus in ]]>
                <foreach collection="bettingRecordStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="betting != null"><![CDATA[ and betting like #{betting} ]]></if>
            <if test="betting_enum != null">
                <![CDATA[ and betting in ]]>
                <foreach collection="betting_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'code'"><![CDATA[ code like #{item.value} ]]></if>
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                    <if test="item.name == 'playRecordCode'"><![CDATA[ playrecordcode like #{item.value} ]]></if>
                    <if test="item.name == 'bettingRecordResult'"><![CDATA[ bettingrecordresult like #{item.value} ]]></if>
                    <if test="item.name == 'bettingRecordStatus'"><![CDATA[ bettingrecordstatus like #{item.value} ]]></if>
                    <if test="item.name == 'betting'"><![CDATA[ betting like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'code_desc'"><![CDATA[ code desc, ]]></if>
            <if test="_orderBy == 'code_asc'"><![CDATA[ code, ]]></if>
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
            <if test="_orderBy == 'playRecordCode_desc'"><![CDATA[ playrecordcode desc, ]]></if>
            <if test="_orderBy == 'playRecordCode_asc'"><![CDATA[ playrecordcode, ]]></if>
            <if test="_orderBy == 'quizMoney_desc'"><![CDATA[ quizmoney desc, ]]></if>
            <if test="_orderBy == 'quizMoney_asc'"><![CDATA[ quizmoney, ]]></if>
            <if test="_orderBy == 'bettingRecordTime_desc'"><![CDATA[ bettingrecordtime desc, ]]></if>
            <if test="_orderBy == 'bettingRecordTime_asc'"><![CDATA[ bettingrecordtime, ]]></if>
            <if test="_orderBy == 'bettingRecordResult_desc'"><![CDATA[ bettingrecordresult desc, ]]></if>
            <if test="_orderBy == 'bettingRecordResult_asc'"><![CDATA[ bettingrecordresult, ]]></if>
            <if test="_orderBy == 'bettingRecordStatus_desc'"><![CDATA[ bettingrecordstatus desc, ]]></if>
            <if test="_orderBy == 'bettingRecordStatus_asc'"><![CDATA[ bettingrecordstatus, ]]></if>
            <if test="_orderBy == 'betting_desc'"><![CDATA[ betting desc, ]]></if>
            <if test="_orderBy == 'betting_asc'"><![CDATA[ betting, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.bettingrecord.entity.BettingRecord">
        insert into
        lol_bettingrecord(code,accountcode,playrecordcode,quizmoney,bettingrecordtime,bettingrecordresult,bettingrecordstatus,betting)
        values(#{code},#{accountCode},#{playRecordCode},#{quizMoney},#{bettingRecordTime},#{bettingRecordResult},#{bettingRecordStatus},#{betting});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.bettingrecord.entity.BettingRecord">
        update lol_bettingrecord
        set accountcode=#{accountCode},playrecordcode=#{playRecordCode},quizmoney=#{quizMoney},bettingrecordtime=#{bettingRecordTime},bettingrecordresult=#{bettingRecordResult},bettingrecordstatus=#{bettingRecordStatus},betting=#{betting}
        where code=#{code};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_bettingrecord where code=#{code};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_bettingrecord
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_bettingrecord where code=#{code};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_bettingrecord where code=#{code};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_bettingrecord
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_bettingrecord
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_bettingrecord
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


