/**
 * 2016/9/23 16:26:58 lenovo created.
 * Generated by Caven.CodeBuilder (funiJava.entity 1.0).
 */

package com.lolluckyman.business.bettingrecord.entity;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.lolluckyman.business.bettingrecord.entity.em.BettingRecordResult;
import com.lolluckyman.business.bettingrecord.entity.em.BettingRecordStatus;
import org.springframework.format.annotation.DateTimeFormat;

import java.util.Date;

/**
 * 投注信息
 * Created by lenovo on 2016/09/23.
 */
public class BettingRecord implements java.io.Serializable {

    // 序列化版本
    private static final long serialVersionUID = -2860684866486435840L;

    // 投注code [主键]
    private String code;
    // 投注账户code
    private String accountCode;
    // 投注联盟玩法code
    private String playRecordCode;
    // 投注竞猜币数量
    private Double quizMoney;
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", locale = "zh" , timezone="GMT+8")
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    // 投注时间
    private Date bettingRecordTime;
    // 投注结果
    private BettingRecordResult bettingRecordResult;
    // 投注状态
    private BettingRecordStatus bettingRecordStatus;

    /** 
     * 获取投注code [主键]
     * 
     * @return 投注code
     */
    public String getCode() {
        return code;
    }

    /** 
     * 设置投注code [主键]
     * 
     * @param code 投注code
     */
    public void setCode(String code) {
        this.code = code;
    }

    /** 
     * 获取投注账户code
     * 
     * @return 投注账户code
     */
    public String getAccountCode() {
        return accountCode;
    }

    /** 
     * 设置投注账户code
     * 
     * @param accountCode 投注账户code
     */
    public void setAccountCode(String accountCode) {
        this.accountCode = accountCode;
    }

    /** 
     * 获取投注联盟玩法code
     * 
     * @return 投注联盟玩法code
     */
    public String getPlayRecordCode() {
        return playRecordCode;
    }

    /** 
     * 设置投注联盟玩法code
     * 
     * @param playRecordCode 投注联盟玩法code
     */
    public void setPlayRecordCode(String playRecordCode) {
        this.playRecordCode = playRecordCode;
    }

    /** 
     * 获取投注竞猜币数量
     * 
     * @return 投注竞猜币数量
     */
    public Double getQuizMoney() {
        return quizMoney;
    }

    /** 
     * 设置投注竞猜币数量
     * 
     * @param quizMoney 投注竞猜币数量
     */
    public void setQuizMoney(Double quizMoney) {
        this.quizMoney = quizMoney;
    }

    /** 
     * 获取投注时间
     * 
     * @return 投注时间
     */
    public Date getBettingRecordTime() {
        return bettingRecordTime;
    }

    /** 
     * 设置投注时间
     * 
     * @param bettingRecordTime 投注时间
     */
    public void setBettingRecordTime(Date bettingRecordTime) {
        this.bettingRecordTime = bettingRecordTime;
    }

    /** 
     * 获取投注结果
     * 
     * @return 投注结果
     */
    public BettingRecordResult getBettingRecordResult() {
        return bettingRecordResult;
    }

    /** 
     * 设置投注结果
     * 
     * @param bettingRecordResult 投注结果
     */
    public void setBettingRecordResult(BettingRecordResult bettingRecordResult) {
        this.bettingRecordResult = bettingRecordResult;
    }

    /** 
     * 获取投注状态
     * 
     * @return 投注状态
     */
    public BettingRecordStatus getBettingRecordStatus() {
        return bettingRecordStatus;
    }

    /** 
     * 设置投注状态
     * 
     * @param bettingRecordStatus 投注状态
     */
    public void setBettingRecordStatus(BettingRecordStatus bettingRecordStatus) {
        this.bettingRecordStatus = bettingRecordStatus;
    }

}
