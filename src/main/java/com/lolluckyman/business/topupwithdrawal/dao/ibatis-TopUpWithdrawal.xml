<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/23 16:23:21 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.lolluckyman.business.topupwithdrawal.dao.ITopUpWithdrawalDao">

    <resultMap type="com.lolluckyman.business.topupwithdrawal.entity.TopUpWithdrawal" id="resultMap">
        <id property="code" column="code" />
        <result property="applyMoney" column="applymoney" />
        <result property="applyAccountCode" column="applyaccountcode" />
        <result property="money" column="money" />
        <result property="applyTime" column="applytime" />
        <result property="businessType" column="businesstype" />
        <result property="tradeType" column="tradetype" />
        <result property="tradeNumber" column="tradenumber" />
        <result property="disposalStatus" column="disposalstatus" />
        <result property="disposalTime" column="disposaltime" />
    </resultMap>

    <sql id="baseCol">
        code, applymoney, applyaccountcode, money, applytime, businesstype, tradetype, tradenumber, disposalstatus, disposaltime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="code != null"><![CDATA[ and code like #{code} ]]></if>
            <if test="code_enum != null">
                <![CDATA[ and code in ]]>
                <foreach collection="code_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyMoney != null"><![CDATA[ and applymoney = #{applyMoney} ]]></if>
            <if test="applyMoney_r_min != null"><![CDATA[ and applymoney >= #{applyMoney_r_min} and applymoney <= #{applyMoney_r_max} ]]></if>
            <if test="applyMoney_enum != null">
                <![CDATA[ and applymoney in ]]>
                <foreach collection="applyMoney_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyAccountCode != null"><![CDATA[ and applyaccountcode like #{applyAccountCode} ]]></if>
            <if test="applyAccountCode_enum != null">
                <![CDATA[ and applyaccountcode in ]]>
                <foreach collection="applyAccountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="money != null"><![CDATA[ and money = #{money} ]]></if>
            <if test="money_r_min != null"><![CDATA[ and money >= #{money_r_min} and money <= #{money_r_max} ]]></if>
            <if test="money_enum != null">
                <![CDATA[ and money in ]]>
                <foreach collection="money_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyTime != null"><![CDATA[ and applytime = #{applyTime} ]]></if>
            <if test="applyTime_r_min != null"><![CDATA[ and applytime >= #{applyTime_r_min} and applytime < #{applyTime_r_max} ]]></if>
            <if test="businessType != null"><![CDATA[ and businesstype like #{businessType} ]]></if>
            <if test="businessType_enum != null">
                <![CDATA[ and businesstype in ]]>
                <foreach collection="businessType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="tradeType != null"><![CDATA[ and tradetype like #{tradeType} ]]></if>
            <if test="tradeType_enum != null">
                <![CDATA[ and tradetype in ]]>
                <foreach collection="tradeType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="tradeNumber != null"><![CDATA[ and tradenumber like #{tradeNumber} ]]></if>
            <if test="tradeNumber_enum != null">
                <![CDATA[ and tradenumber in ]]>
                <foreach collection="tradeNumber_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="disposalStatus != null"><![CDATA[ and disposalstatus like #{disposalStatus} ]]></if>
            <if test="disposalStatus_enum != null">
                <![CDATA[ and disposalstatus in ]]>
                <foreach collection="disposalStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="disposalTime != null"><![CDATA[ and disposaltime = #{disposalTime} ]]></if>
            <if test="disposalTime_r_min != null"><![CDATA[ and disposaltime >= #{disposalTime_r_min} and disposaltime < #{disposalTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'code'"><![CDATA[ code like #{item.value} ]]></if>
                    <if test="item.name == 'applyAccountCode'"><![CDATA[ applyaccountcode like #{item.value} ]]></if>
                    <if test="item.name == 'businessType'"><![CDATA[ businesstype like #{item.value} ]]></if>
                    <if test="item.name == 'tradeType'"><![CDATA[ tradetype like #{item.value} ]]></if>
                    <if test="item.name == 'tradeNumber'"><![CDATA[ tradenumber like #{item.value} ]]></if>
                    <if test="item.name == 'disposalStatus'"><![CDATA[ disposalstatus like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'code_desc'"><![CDATA[ code desc, ]]></if>
            <if test="_orderBy == 'code_asc'"><![CDATA[ code, ]]></if>
            <if test="_orderBy == 'applyMoney_desc'"><![CDATA[ applymoney desc, ]]></if>
            <if test="_orderBy == 'applyMoney_asc'"><![CDATA[ applymoney, ]]></if>
            <if test="_orderBy == 'applyAccountCode_desc'"><![CDATA[ applyaccountcode desc, ]]></if>
            <if test="_orderBy == 'applyAccountCode_asc'"><![CDATA[ applyaccountcode, ]]></if>
            <if test="_orderBy == 'money_desc'"><![CDATA[ money desc, ]]></if>
            <if test="_orderBy == 'money_asc'"><![CDATA[ money, ]]></if>
            <if test="_orderBy == 'applyTime_desc'"><![CDATA[ applytime desc, ]]></if>
            <if test="_orderBy == 'applyTime_asc'"><![CDATA[ applytime, ]]></if>
            <if test="_orderBy == 'businessType_desc'"><![CDATA[ businesstype desc, ]]></if>
            <if test="_orderBy == 'businessType_asc'"><![CDATA[ businesstype, ]]></if>
            <if test="_orderBy == 'tradeType_desc'"><![CDATA[ tradetype desc, ]]></if>
            <if test="_orderBy == 'tradeType_asc'"><![CDATA[ tradetype, ]]></if>
            <if test="_orderBy == 'tradeNumber_desc'"><![CDATA[ tradenumber desc, ]]></if>
            <if test="_orderBy == 'tradeNumber_asc'"><![CDATA[ tradenumber, ]]></if>
            <if test="_orderBy == 'disposalStatus_desc'"><![CDATA[ disposalstatus desc, ]]></if>
            <if test="_orderBy == 'disposalStatus_asc'"><![CDATA[ disposalstatus, ]]></if>
            <if test="_orderBy == 'disposalTime_desc'"><![CDATA[ disposaltime desc, ]]></if>
            <if test="_orderBy == 'disposalTime_asc'"><![CDATA[ disposaltime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.lolluckyman.business.topupwithdrawal.entity.TopUpWithdrawal">
        insert into
        lol_topupwithdrawal(code,applymoney,applyaccountcode,money,applytime,businesstype,tradetype,tradenumber,disposalstatus,disposaltime)
        values(#{code},#{applyMoney},#{applyAccountCode},#{money},#{applyTime},#{businessType},#{tradeType},#{tradeNumber},#{disposalStatus},#{disposalTime});
    </insert>

    <update id="updateObject" parameterType="com.lolluckyman.business.topupwithdrawal.entity.TopUpWithdrawal">
        update lol_topupwithdrawal
        set applymoney=#{applyMoney},applyaccountcode=#{applyAccountCode},money=#{money},applytime=#{applyTime},businesstype=#{businessType},tradetype=#{tradeType},tradenumber=#{tradeNumber},disposalstatus=#{disposalStatus},disposaltime=#{disposalTime}
        where code=#{code};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from lol_topupwithdrawal where code=#{code};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.lolluckyman.utils.core.QueryParams">
        delete from lol_topupwithdrawal
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_topupwithdrawal where code=#{code};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from lol_topupwithdrawal where code=#{code};
    </select>

    <select id="queryCount" parameterType="com.lolluckyman.utils.core.QueryParams" resultType="int">
        select count(*) from lol_topupwithdrawal
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from lol_topupwithdrawal
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.lolluckyman.utils.core.QueryParams" resultMap="resultMap">
        select * from lol_topupwithdrawal
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


